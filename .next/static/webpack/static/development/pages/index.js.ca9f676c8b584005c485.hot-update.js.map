{"version":3,"file":"static/webpack/static/development/pages/index.js.ca9f676c8b584005c485.hot-update.js","sources":["webpack:///./components/common/card.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst Card = styled.div`\n    border: 2px solid #ddd;\n    border-radius: 5px;\n    margin: 10px;\n\n    ${props => props.disabled && css`\n        background: #ccc;\n        border-color: #ccc;\n    `}\n`;\n\nconst CardTitle = styled.div`\n    font-size: 12px;\n    font-weight: bold;\n    padding: 5px;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n    background: #ddd;\n\n    ${props => props.disabled && css`\n        background: #ccc;\n    `}\n`;\n\nconst CardContent = styled.div`\n    padding: 10px;\n\n    ${props => props.disabled && css`\n        pointer-events: none;\n    `}\n`;\n\n\nexport class AppCard extends Component {\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.selected !== nextProps.selected) {\n            return {\n                selected: nextProps.selected\n            };\n        }\n\n        return null;\n    }\n\n    constructor() {\n        super();\n        this.state = {\n            selected: false\n        };\n    }\n\n    toggleSelection = () => {\n        const { selected } = this.props;\n        this.props.onSelectionChange(!selected);\n    }\n\n    render() {\n        const { title, children, selectable, selected, testId } = this.props;\n        const shouldDisable = selectable ? !this.state.selected : false;\n\n        return (\n            <Card disabled={shouldDisable} data-testid={`room-${testId}`} >\n                <CardTitle disabled={shouldDisable}>\n                    {selectable &&\n                        <input type=\"checkbox\" checked={selected} onChange={this.toggleSelection} />}\n                    {title}\n                </CardTitle>\n                <CardContent disabled={shouldDisable}>\n                    {children}\n                </CardContent>\n            </ Card>\n        );\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAKA;AAAA;AAMA;AAQA;AAAA;AAKA;AAGA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AATA;AACA;AAUA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AATA;AACA;AADA;AAFA;AAKA;AACA;AAjBA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAvCA;AACA;AADA;AAAA;;;;A","sourceRoot":""}