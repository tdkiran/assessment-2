{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { actionTypes } from './actions-creators';\nimport { createSelector } from 'reselect';\nimport { defaultRoomInfo } from '../app_config';\n\nfunction activeRooms(state = 1, action) {\n  switch (action.type) {\n    case actionTypes.SELECT_ROOM:\n      return action.roomId + 1;\n\n    case actionTypes.DESELECT_ROOM:\n      return action.roomId + 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction occupantSelectionInfo(state = [], action) {\n  switch (action.type) {\n    case actionTypes.SELECT_OCCUPANT:\n      {\n        return state.filter(occupantInfo => occupantInfo.roomId !== action.roomId).concat(action.occupantInfo);\n      }\n\n    case actionTypes.SELECT_ROOM:\n      {\n        const activeRooms = action.roomId + 1;\n        return state.filter(occupantInfo => occupantInfo.roomId <= activeRooms);\n      }\n\n    case actionTypes.DESELECT_ROOM:\n      {\n        const activeRooms = action.roomId + 1;\n        return state.filter(occupantInfo => occupantInfo.roomId > activeRooms);\n      }\n\n    default:\n      return state;\n  }\n} // Root Reducer\n\n\nconst reducer = combineReducers({\n  activeRooms,\n  occupantSelectionInfo\n});\nexport default reducer; // selector\n\nexport const getActiveRooms = state => state.activeRooms;\nexport const getOccupantSelectionInfo = state => state.occupantSelectionInfo;\nexport const roomInfo = createSelector(getActiveRooms, getOccupantSelectionInfo, (activeRooms, occupantSelectionInfo) => {\n  const defaultRoom = {\n    adult: 1,\n    children: 0\n  };\n  console.clear();\n  console.log(defaultRoomInfo);\n  const currentRoomInfo = defaultRoomInfo.map(roomInfo => {\n    const id = roomInfo.id;\n    const occupantInfo = occupantSelectionInfo.find(occInfo => occInfo.id === id);\n    occupantInfo ? _objectSpread({}, roomInfo, {\n      occupantInfo,\n      active: true\n    }) : _objectSpread({}, roomInfo, {\n      defaultRoom,\n      active: false\n    });\n  });\n  debugger;\n  return currentRoomInfo;\n});","map":{"version":3,"sources":["/Users/tdkiran/Desktop/assessment-2/reducers/index.js"],"names":["combineReducers","actionTypes","createSelector","defaultRoomInfo","activeRooms","state","action","type","SELECT_ROOM","roomId","DESELECT_ROOM","occupantSelectionInfo","SELECT_OCCUPANT","filter","occupantInfo","concat","reducer","getActiveRooms","getOccupantSelectionInfo","roomInfo","defaultRoom","adult","children","console","clear","log","currentRoomInfo","map","id","find","occInfo","active"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAG,CAA7B,EAAgCC,MAAhC,EAAwC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,WAAjB;AACI,aAAOF,MAAM,CAACG,MAAP,GAAgB,CAAvB;;AACJ,SAAKR,WAAW,CAACS,aAAjB;AACI,aAAOJ,MAAM,CAACG,MAAP,GAAgB,CAAvB;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQH;;AAED,SAASM,qBAAT,CAA+BN,KAAK,GAAG,EAAvC,EAA2CC,MAA3C,EAAmD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACW,eAAjB;AAAkC;AAC9B,eAAOP,KAAK,CACPQ,MADE,CACKC,YAAY,IAAIA,YAAY,CAACL,MAAb,KAAwBH,MAAM,CAACG,MADpD,EAEFM,MAFE,CAEKT,MAAM,CAACQ,YAFZ,CAAP;AAGH;;AAED,SAAKb,WAAW,CAACO,WAAjB;AAA8B;AAC1B,cAAMJ,WAAW,GAAGE,MAAM,CAACG,MAAP,GAAgB,CAApC;AACA,eAAOJ,KAAK,CAACQ,MAAN,CAAaC,YAAY,IAAIA,YAAY,CAACL,MAAb,IAAuBL,WAApD,CAAP;AACH;;AAED,SAAKH,WAAW,CAACS,aAAjB;AAAgC;AAC5B,cAAMN,WAAW,GAAGE,MAAM,CAACG,MAAP,GAAgB,CAApC;AACA,eAAOJ,KAAK,CAACQ,MAAN,CAAaC,YAAY,IAAIA,YAAY,CAACL,MAAb,GAAsBL,WAAnD,CAAP;AACH;;AAED;AACI,aAAOC,KAAP;AAlBR;AAoBH,C,CACD;;;AACA,MAAMW,OAAO,GAAGhB,eAAe,CAAC;AAC5BI,EAAAA,WAD4B;AAE5BO,EAAAA;AAF4B,CAAD,CAA/B;AAIA,eAAeK,OAAf,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAGZ,KAAK,IAAIA,KAAK,CAACD,WAAtC;AACP,OAAO,MAAMc,wBAAwB,GAAGb,KAAK,IAAIA,KAAK,CAACM,qBAAhD;AAEP,OAAO,MAAMQ,QAAQ,GAAGjB,cAAc,CAACe,cAAD,EAAiBC,wBAAjB,EAA2C,CAACd,WAAD,EAAcO,qBAAd,KAAwC;AACrH,QAAMS,WAAW,GAAG;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAApB;AACAC,EAAAA,OAAO,CAACC,KAAR;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAYtB,eAAZ;AACA,QAAMuB,eAAe,GAAGvB,eAAe,CAACwB,GAAhB,CAAoBR,QAAQ,IAAI;AACpD,UAAMS,EAAE,GAAGT,QAAQ,CAACS,EAApB;AACA,UAAMd,YAAY,GAAGH,qBAAqB,CAACkB,IAAtB,CAA2BC,OAAO,IAAIA,OAAO,CAACF,EAAR,KAAeA,EAArD,CAArB;AACAd,IAAAA,YAAY,qBAAQK,QAAR;AAAkBL,MAAAA,YAAlB;AAAgCiB,MAAAA,MAAM,EAAE;AAAxC,2BAAsDZ,QAAtD;AAAgEC,MAAAA,WAAhE;AAA6EW,MAAAA,MAAM,EAAE;AAArF,MAAZ;AACH,GAJuB,CAAxB;AAKA;AACA,SAAOL,eAAP;AACH,CAXqC,CAA/B","sourcesContent":["import { combineReducers } from 'redux';\nimport { actionTypes } from './actions-creators';\nimport { createSelector } from 'reselect';\nimport { defaultRoomInfo } from '../app_config';\n\nfunction activeRooms(state = 1, action) {\n    switch (action.type) {\n        case actionTypes.SELECT_ROOM:\n            return action.roomId + 1;\n        case actionTypes.DESELECT_ROOM:\n            return action.roomId + 1;\n        default:\n            return state\n    }\n}\n\nfunction occupantSelectionInfo(state = [], action) {\n    switch (action.type) {\n        case actionTypes.SELECT_OCCUPANT: {\n            return state\n                .filter(occupantInfo => occupantInfo.roomId !== action.roomId)\n                .concat(action.occupantInfo);\n        }\n\n        case actionTypes.SELECT_ROOM: {\n            const activeRooms = action.roomId + 1;\n            return state.filter(occupantInfo => occupantInfo.roomId <= activeRooms);\n        }\n\n        case actionTypes.DESELECT_ROOM: {\n            const activeRooms = action.roomId + 1;\n            return state.filter(occupantInfo => occupantInfo.roomId > activeRooms);\n        }\n\n        default:\n            return state\n    }\n}\n// Root Reducer\nconst reducer = combineReducers({\n    activeRooms,\n    occupantSelectionInfo\n});\nexport default reducer;\n\n// selector\nexport const getActiveRooms = state => state.activeRooms;\nexport const getOccupantSelectionInfo = state => state.occupantSelectionInfo;\n\nexport const roomInfo = createSelector(getActiveRooms, getOccupantSelectionInfo, (activeRooms, occupantSelectionInfo) => {\n    const defaultRoom = { adult: 1, children: 0 };\n    console.clear();\n    console.log(defaultRoomInfo);\n    const currentRoomInfo = defaultRoomInfo.map(roomInfo => {\n        const id = roomInfo.id;\n        const occupantInfo = occupantSelectionInfo.find(occInfo => occInfo.id === id);\n        occupantInfo ? { ...roomInfo, occupantInfo, active: true } : { ...roomInfo, defaultRoom, active: false };\n    });\n    debugger\n    return currentRoomInfo;\n});"]},"metadata":{},"sourceType":"module"}