{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tdkiran/Desktop/with-redux/components/booking/booking.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\ndisplay: flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { AppCard } from '../common/card';\nimport { Room } from './room';\nimport styled from 'styled-components';\nvar BookingContainer = styled.div(_templateObject());\nexport var Booking =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Booking, _Component);\n\n  function Booking() {\n    _classCallCheck(this, Booking);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Booking).call(this));\n  }\n\n  _createClass(Booking, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(room, selected) {\n      var _this$props = this.props,\n          _rooms = _this$props.rooms,\n          selectRoom = _this$props.selectRoom,\n          deSelectRoom = _this$props.deSelectRoom,\n          resetSelection = _this$props.resetSelection;\n\n      var rooms = _rooms.filter(function (r) {\n        return r.available;\n      }); // resetSelection();\n\n\n      var index = rooms.indexOf(room);\n      rooms.slice(0, index + 1).forEach(function (_ref) {\n        var roomId = _ref.roomId;\n        return selectRoom(roomId);\n      });\n      rooms.slice(index + 11).forEach(function (_ref2) {\n        var roomId = _ref2.roomId;\n        return deSelectRoom(roomId);\n      });\n\n      if (selected) {\n        deSelectRoom(room.roomId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          rooms = _this$props2.rooms,\n          _this$props2$selected = _this$props2.selectedRoomIds,\n          selectedRoomIds = _this$props2$selected === void 0 ? [] : _this$props2$selected,\n          selectOccupant = _this$props2.selectOccupant;\n      return __jsx(BookingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, rooms.map(function (room) {\n        return __jsx(Room, _extends({}, room, {\n          selectOccupant: selectOccupant,\n          selected: selectedRoomIds.includes(room.roomId),\n          onSelectionChange: _this.onSelectionChange.bind(_this, room),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Booking;\n}(Component);","map":{"version":3,"sources":["/Users/tdkiran/Desktop/with-redux/components/booking/booking.js"],"names":["React","Component","AppCard","Room","styled","BookingContainer","div","Booking","room","selected","props","_rooms","rooms","selectRoom","deSelectRoom","resetSelection","filter","r","available","index","indexOf","slice","forEach","roomId","selectedRoomIds","selectOccupant","map","includes","onSelectionChange","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAV,mBAAtB;AAIA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AACI,qBAAc;AAAA;;AAAA;AAEb;;AAHL;AAAA;AAAA,wCAIwB,CACnB;AALL;AAAA;AAAA,sCAOsBC,IAPtB,EAO4BC,QAP5B,EAOsC;AAAA,wBACsC,KAAKC,KAD3C;AAAA,UACfC,MADe,eACtBC,KADsB;AAAA,UACPC,UADO,eACPA,UADO;AAAA,UACKC,YADL,eACKA,YADL;AAAA,UACmBC,cADnB,eACmBA,cADnB;;AAE9B,UAAMH,KAAK,GAAGD,MAAM,CAACK,MAAP,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,SAAN;AAAA,OAAf,CAAd,CAF8B,CAG9B;;;AACA,UAAMC,KAAK,GAAGP,KAAK,CAACQ,OAAN,CAAcZ,IAAd,CAAd;AAEAI,MAAAA,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeF,KAAK,GAAG,CAAvB,EAA0BG,OAA1B,CAAkC;AAAA,YAAGC,MAAH,QAAGA,MAAH;AAAA,eAAgBV,UAAU,CAACU,MAAD,CAA1B;AAAA,OAAlC;AAEAX,MAAAA,KAAK,CAACS,KAAN,CAAYF,KAAK,GAAG,EAApB,EAAwBG,OAAxB,CAAgC;AAAA,YAAGC,MAAH,SAAGA,MAAH;AAAA,eAAgBT,YAAY,CAACS,MAAD,CAA5B;AAAA,OAAhC;;AAEA,UAAId,QAAJ,EAAc;AACVK,QAAAA,YAAY,CAACN,IAAI,CAACe,MAAN,CAAZ;AACH;AACJ;AApBL;AAAA;AAAA,6BAsBa;AAAA;;AAAA,yBACmD,KAAKb,KADxD;AAAA,UACGE,KADH,gBACGA,KADH;AAAA,+CACUY,eADV;AAAA,UACUA,eADV,sCAC4B,EAD5B;AAAA,UACgCC,cADhC,gBACgCA,cADhC;AAGL,aAAQ,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJb,KAAK,CAACc,GAAN,CAAU,UAAClB,IAAD,EAAU;AAChB,eAAO,MAAC,IAAD,eAAUA,IAAV;AACH,UAAA,cAAc,EAAEiB,cADb;AAEH,UAAA,QAAQ,EAAED,eAAe,CAACG,QAAhB,CAAyBnB,IAAI,CAACe,MAA9B,CAFP;AAGH,UAAA,iBAAiB,EAAE,KAAI,CAACK,iBAAL,CAAuBC,IAAvB,CAA4B,KAA5B,EAAkCrB,IAAlC,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAIH,OALD,CADI,CAAR;AAQH;AAjCL;;AAAA;AAAA,EAA6BP,SAA7B","sourcesContent":["import React, { Component } from 'react';\nimport { AppCard } from '../common/card';\nimport { Room } from './room';\nimport styled from 'styled-components';\n\nconst BookingContainer = styled.div`\ndisplay: flex;\n`;\n\nexport class Booking extends Component {\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n    }\n\n    onSelectionChange(room, selected) {\n        const { rooms: _rooms, selectRoom, deSelectRoom, resetSelection } = this.props;\n        const rooms = _rooms.filter(r => r.available);\n        // resetSelection();\n        const index = rooms.indexOf(room);\n\n        rooms.slice(0, index + 1).forEach(({ roomId }) => selectRoom(roomId));\n\n        rooms.slice(index + 11).forEach(({ roomId }) => deSelectRoom(roomId));\n\n        if (selected) {\n            deSelectRoom(room.roomId);\n        }\n    }\n\n    render() {\n        const { rooms, selectedRoomIds = [], selectOccupant } = this.props;\n\n        return (<BookingContainer>{\n            rooms.map((room) => {\n                return <Room {...room}\n                    selectOccupant={selectOccupant}\n                    selected={selectedRoomIds.includes(room.roomId)}\n                    onSelectionChange={this.onSelectionChange.bind(this, room)} />\n            })\n        }</BookingContainer>);\n    }\n}"]},"metadata":{},"sourceType":"module"}