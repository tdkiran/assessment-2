{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/tdkiran/Desktop/with-redux/components/booking/booking.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { AppCard } from '../common/card';\nimport { Room } from './room';\nimport styled from 'styled-components';\nconst BookingContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: start\n`;\nconst RoomsContainer = styled.div`\n    display: flex;\n`;\nexport class Booking extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"saveBooking\", () => {\n      const {\n        appState\n      } = this.props;\n      localStorage.setItem('bookings', _JSON$stringify(appState));\n    });\n  }\n\n  componentDidMount() {\n    const {\n      initState\n    } = this.props;\n    const localState = JSON.parse(localStorage.getItem('bookings')) || null;\n\n    if (localState) {\n      initState(localState);\n    }\n  }\n\n  onSelectionChange(room, selected) {\n    const {\n      rooms: _rooms,\n      selectRoom,\n      deSelectRoom,\n      resetSelection\n    } = this.props;\n\n    const rooms = _rooms.filter(r => r.available);\n\n    const index = rooms.indexOf(room);\n    rooms.slice(0, index + 1).forEach(({\n      roomId\n    }) => selectRoom(roomId));\n    rooms.slice(index + 1).forEach(({\n      roomId\n    }) => deSelectRoom(roomId));\n\n    if (!selected) {\n      deSelectRoom(room.roomId);\n    }\n  }\n\n  render() {\n    const {\n      rooms,\n      selectedRoomIds = [],\n      selectOccupant\n    } = this.props;\n    return __jsx(BookingContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(RoomsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, rooms.map(room => {\n      return __jsx(Room, _extends({}, room, {\n        selectOccupant: selectOccupant,\n        selected: selectedRoomIds.includes(room.roomId),\n        onSelectionChange: this.onSelectionChange.bind(this, room),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: this.saveBooking,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/tdkiran/Desktop/with-redux/components/booking/booking.js"],"names":["React","Component","AppCard","Room","styled","BookingContainer","div","RoomsContainer","Booking","constructor","appState","props","localStorage","setItem","componentDidMount","initState","localState","JSON","parse","getItem","onSelectionChange","room","selected","rooms","_rooms","selectRoom","deSelectRoom","resetSelection","filter","r","available","index","indexOf","slice","forEach","roomId","render","selectedRoomIds","selectOccupant","map","includes","bind","saveBooking"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAI;;;;CAApC;AAMA,MAAMC,cAAc,GAAGH,MAAM,CAACE,GAAI;;CAAlC;AAIA,OAAO,MAAME,OAAN,SAAsBP,SAAtB,CAAgC;AACnCQ,EAAAA,WAAW,GAAG;AACV;;AADU,yCAaA,MAAM;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,gBAAeH,QAAf,CAAjC;AACH,KAhBa;AAEb;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKJ,KAA3B;AACA,UAAMK,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,UAArB,CAAX,KAAgD,IAAnE;;AAEA,QAAIH,UAAJ,EAAgB;AACZD,MAAAA,SAAS,CAACC,UAAD,CAAT;AACH;AACJ;;AAODI,EAAAA,iBAAiB,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC9B,UAAM;AAAEC,MAAAA,KAAK,EAAEC,MAAT;AAAiBC,MAAAA,UAAjB;AAA6BC,MAAAA,YAA7B;AAA2CC,MAAAA;AAA3C,QAA8D,KAAKhB,KAAzE;;AACA,UAAMY,KAAK,GAAGC,MAAM,CAACI,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACC,SAArB,CAAd;;AACA,UAAMC,KAAK,GAAGR,KAAK,CAACS,OAAN,CAAcX,IAAd,CAAd;AAEAE,IAAAA,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAeF,KAAK,GAAG,CAAvB,EAA0BG,OAA1B,CAAkC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgBV,UAAU,CAACU,MAAD,CAA5D;AAEAZ,IAAAA,KAAK,CAACU,KAAN,CAAYF,KAAK,GAAG,CAApB,EAAuBG,OAAvB,CAA+B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgBT,YAAY,CAACS,MAAD,CAA3D;;AAEA,QAAI,CAACb,QAAL,EAAe;AACXI,MAAAA,YAAY,CAACL,IAAI,CAACc,MAAN,CAAZ;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,KAAF;AAASc,MAAAA,eAAe,GAAG,EAA3B;AAA+BC,MAAAA;AAA/B,QAAkD,KAAK3B,KAA7D;AAEA,WAAQ,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQY,KAAK,CAACgB,GAAN,CAAWlB,IAAD,IAAU;AAChB,aAAO,MAAC,IAAD,eAAUA,IAAV;AACH,QAAA,cAAc,EAAEiB,cADb;AAEH,QAAA,QAAQ,EAAED,eAAe,CAACG,QAAhB,CAAyBnB,IAAI,CAACc,MAA9B,CAFP;AAGH,QAAA,iBAAiB,EAAE,KAAKf,iBAAL,CAAuBqB,IAAvB,CAA4B,IAA5B,EAAkCpB,IAAlC,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAIH,KALD,CAFR,CADI,EAWJ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKqB,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXI,CAAR;AAaH;;AAjDkC","sourcesContent":["import React, { Component } from 'react';\nimport { AppCard } from '../common/card';\nimport { Room } from './room';\nimport styled from 'styled-components';\n\nconst BookingContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: start\n`;\n\nconst RoomsContainer = styled.div`\n    display: flex;\n`;\n\nexport class Booking extends Component {\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        const { initState } = this.props;\n        const localState = JSON.parse(localStorage.getItem('bookings')) || null;\n\n        if (localState) {\n            initState(localState);\n        }\n    }\n\n    saveBooking = () => {\n        const { appState } = this.props;\n        localStorage.setItem('bookings', JSON.stringify(appState));\n    }\n\n    onSelectionChange(room, selected) {\n        const { rooms: _rooms, selectRoom, deSelectRoom, resetSelection } = this.props;\n        const rooms = _rooms.filter(r => r.available);\n        const index = rooms.indexOf(room);\n\n        rooms.slice(0, index + 1).forEach(({ roomId }) => selectRoom(roomId));\n\n        rooms.slice(index + 1).forEach(({ roomId }) => deSelectRoom(roomId));\n\n        if (!selected) {\n            deSelectRoom(room.roomId);\n        }\n    }\n\n    render() {\n        const { rooms, selectedRoomIds = [], selectOccupant } = this.props;\n\n        return (<BookingContainer>\n            <RoomsContainer>\n                {\n                    rooms.map((room) => {\n                        return <Room {...room}\n                            selectOccupant={selectOccupant}\n                            selected={selectedRoomIds.includes(room.roomId)}\n                            onSelectionChange={this.onSelectionChange.bind(this, room)} />\n                    })\n                }\n            </RoomsContainer>\n            <button type=\"submit\" onClick={this.saveBooking}>Submit</button>\n        </BookingContainer>);\n    }\n}"]},"metadata":{},"sourceType":"module"}