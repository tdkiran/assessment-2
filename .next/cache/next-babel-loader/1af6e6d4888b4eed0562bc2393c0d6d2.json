{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { actionTypes } from './actions-creators';\nimport { createSelector } from 'reselect';\nimport { defaultRoomInfo } from '../app_config';\n\nfunction activeRooms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SELECT_ROOM:\n      {\n        return action.roomId + 1;\n      }\n\n    case actionTypes.DESELECT_ROOM:\n      return action.roomId;\n\n    default:\n      return state;\n  }\n}\n\nfunction occupantSelectionInfo() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{\n    adult: 1,\n    children: 0,\n    roomId: 0\n  }];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SELECT_OCCUPANT:\n      {\n        return state.filter(function (occupantInfo) {\n          return occupantInfo.id !== action.roomId;\n        }).concat(action.occupantInfo);\n      }\n\n    case actionTypes.SELECT_ROOM:\n      {\n        var _activeRooms = action.roomId + 1;\n\n        return state.filter(function (occupantInfo) {\n          return occupantInfo.id <= _activeRooms;\n        });\n      }\n\n    case actionTypes.DESELECT_ROOM:\n      {\n        var _activeRooms2 = action.roomId + 1;\n\n        return state.filter(function (occupantInfo) {\n          return occupantInfo.id > _activeRooms2;\n        });\n      }\n\n    default:\n      return state;\n  }\n} // Root Reducer\n\n\nvar reducer = combineReducers({\n  activeRooms: activeRooms,\n  occupantSelectionInfo: occupantSelectionInfo\n});\nexport default reducer; // selector\n\nexport var getActiveRooms = function getActiveRooms(state) {\n  return state.activeRooms;\n};\nexport var getOccupantSelectionInfo = function getOccupantSelectionInfo(state) {\n  return state.occupantSelectionInfo;\n};\nexport var roomInfo = createSelector(getActiveRooms, getOccupantSelectionInfo, function (activeRooms, occupantSelectionInfo) {\n  var defaultRoom = {\n    adult: 1,\n    children: 0\n  };\n  var currentRoomInfo = defaultRoomInfo.map(function (roomInfo) {\n    var roomId = roomInfo.roomId;\n    var occupantInfo = occupantSelectionInfo.find(function (occInfo) {\n      return occInfo.roomId === roomId;\n    });\n    return occupantInfo ? _objectSpread({}, roomInfo, {\n      occupantInfo: occupantInfo,\n      active: true,\n      hideOption: roomId === 0 ? true : false\n    }) : _objectSpread({}, roomInfo, {\n      defaultRoom: defaultRoom,\n      active: roomId + 1 <= activeRooms,\n      hideOption: roomId === 0 ? true : false\n    });\n  });\n  return currentRoomInfo;\n});","map":{"version":3,"sources":["/Users/tdkiran/Desktop/assessment-2/reducers/index.js"],"names":["combineReducers","actionTypes","createSelector","defaultRoomInfo","activeRooms","state","action","type","SELECT_ROOM","roomId","DESELECT_ROOM","occupantSelectionInfo","adult","children","SELECT_OCCUPANT","filter","occupantInfo","id","concat","reducer","getActiveRooms","getOccupantSelectionInfo","roomInfo","defaultRoom","currentRoomInfo","map","find","occInfo","active","hideOption"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { actionTypes } from './actions-creators';\nimport { createSelector } from 'reselect';\nimport { defaultRoomInfo } from '../app_config';\n\nfunction activeRooms(state = 1, action) {\n    switch (action.type) {\n        case actionTypes.SELECT_ROOM: {\n            return action.roomId + 1;\n        }\n        case actionTypes.DESELECT_ROOM:\n            return action.roomId;\n        default:\n            return state\n    }\n}\n\nfunction occupantSelectionInfo(state = [{ adult: 1, children: 0, roomId: 0 }], action) {\n    switch (action.type) {\n        case actionTypes.SELECT_OCCUPANT: {\n            return state\n                .filter(occupantInfo => occupantInfo.id !== action.roomId)\n                .concat(action.occupantInfo);\n        }\n\n        case actionTypes.SELECT_ROOM: {\n            const activeRooms = action.roomId + 1;\n            return state.filter(occupantInfo => occupantInfo.id <= activeRooms);\n        }\n\n        case actionTypes.DESELECT_ROOM: {\n            const activeRooms = action.roomId + 1;\n            return state.filter(occupantInfo => occupantInfo.id > activeRooms);\n        }\n\n        default:\n            return state\n    }\n}\n// Root Reducer\nconst reducer = combineReducers({\n    activeRooms,\n    occupantSelectionInfo\n});\nexport default reducer;\n\n// selector\nexport const getActiveRooms = state => state.activeRooms;\nexport const getOccupantSelectionInfo = state => state.occupantSelectionInfo;\n\nexport const roomInfo = createSelector(getActiveRooms, getOccupantSelectionInfo, (activeRooms, occupantSelectionInfo) => {\n    const defaultRoom = { adult: 1, children: 0 };\n    const currentRoomInfo = defaultRoomInfo.map(roomInfo => {\n        const roomId = roomInfo.roomId;\n        const occupantInfo = occupantSelectionInfo.find(occInfo => occInfo.roomId === roomId);\n        return occupantInfo ? { ...roomInfo, occupantInfo, active: true, hideOption: (roomId === 0 ? true : false) } : { ...roomInfo, defaultRoom, active: (roomId + 1 <= activeRooms), hideOption: (roomId === 0 ? true : false) };\n    });\n    return currentRoomInfo;\n});"]},"metadata":{},"sourceType":"module"}