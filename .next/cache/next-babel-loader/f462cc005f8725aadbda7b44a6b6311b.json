{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/tdkiran/Desktop/with-redux/components/booking/booking.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { AppCard } from '../common/card';\nimport { Room } from './room';\nimport styled from 'styled-components';\nconst BookingContainer = styled.div`\ndisplay: flex;\n`;\nexport class Booking extends Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {}\n\n  onSelectionChange(room, selected) {\n    const {\n      rooms,\n      selectRoom,\n      deSelectRoom,\n      resetSelection\n    } = this.props; // resetSelection();\n\n    let reached = false;\n    rooms.forEach(_room => {\n      if (reached) {\n        deSelectRoom(_room.roomId);\n      }\n\n      if (!reached && _room.available && selected) {\n        selectRoom(_room.roomId);\n      }\n\n      if (!reached && _room.roomId === room.roomId) {\n        reached = true;\n\n        if (selected) {\n          deSelectRoom(_room.roomId);\n        }\n      }\n    });\n  }\n\n  render() {\n    const {\n      rooms,\n      selectedRoomIds = [],\n      selectOccupant\n    } = this.props;\n    return __jsx(BookingContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, rooms.map(room => {\n      return __jsx(Room, _extends({}, room, {\n        selectOccupant: selectOccupant,\n        selected: selectedRoomIds.includes(room.roomId),\n        onSelectionChange: this.onSelectionChange.bind(this, room),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tdkiran/Desktop/with-redux/components/booking/booking.js"],"names":["React","Component","AppCard","Room","styled","BookingContainer","div","Booking","constructor","componentDidMount","onSelectionChange","room","selected","rooms","selectRoom","deSelectRoom","resetSelection","props","reached","forEach","_room","roomId","available","render","selectedRoomIds","selectOccupant","map","includes","bind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAI;;CAApC;AAIA,OAAO,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AACnCO,EAAAA,WAAW,GAAG;AACV;AACH;;AACDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,iBAAiB,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC9B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,UAAT;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA;AAAnC,QAAsD,KAAKC,KAAjE,CAD8B,CAG9B;;AACA,QAAIC,OAAO,GAAG,KAAd;AACAL,IAAAA,KAAK,CAACM,OAAN,CAAcC,KAAK,IAAI;AACnB,UAAIF,OAAJ,EAAa;AACTH,QAAAA,YAAY,CAACK,KAAK,CAACC,MAAP,CAAZ;AACH;;AAED,UAAI,CAACH,OAAD,IAAYE,KAAK,CAACE,SAAlB,IAA+BV,QAAnC,EAA6C;AACzCE,QAAAA,UAAU,CAACM,KAAK,CAACC,MAAP,CAAV;AACH;;AAED,UAAI,CAACH,OAAD,IAAaE,KAAK,CAACC,MAAN,KAAiBV,IAAI,CAACU,MAAvC,EAAgD;AAC5CH,QAAAA,OAAO,GAAG,IAAV;;AAEA,YAAIN,QAAJ,EAAc;AACVG,UAAAA,YAAY,CAACK,KAAK,CAACC,MAAP,CAAZ;AACH;AACJ;AACJ,KAhBD;AAiBH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,KAAF;AAASW,MAAAA,eAAe,GAAG,EAA3B;AAA+BC,MAAAA;AAA/B,QAAkD,KAAKR,KAA7D;AAEA,WAAQ,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJJ,KAAK,CAACa,GAAN,CAAWf,IAAD,IAAU;AAChB,aAAO,MAAC,IAAD,eAAUA,IAAV;AACH,QAAA,cAAc,EAAEc,cADb;AAEH,QAAA,QAAQ,EAAED,eAAe,CAACG,QAAhB,CAAyBhB,IAAI,CAACU,MAA9B,CAFP;AAGH,QAAA,iBAAiB,EAAE,KAAKX,iBAAL,CAAuBkB,IAAvB,CAA4B,IAA5B,EAAkCjB,IAAlC,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAIH,KALD,CADI,CAAR;AAQH;;AA1CkC","sourcesContent":["import React, { Component } from 'react';\nimport { AppCard } from '../common/card';\nimport { Room } from './room';\nimport styled from 'styled-components';\n\nconst BookingContainer = styled.div`\ndisplay: flex;\n`;\n\nexport class Booking extends Component {\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n    }\n\n    onSelectionChange(room, selected) {\n        const { rooms, selectRoom, deSelectRoom, resetSelection } = this.props;\n\n        // resetSelection();\n        let reached = false;\n        rooms.forEach(_room => {\n            if (reached) {\n                deSelectRoom(_room.roomId);\n            }\n\n            if (!reached && _room.available && selected) {\n                selectRoom(_room.roomId);\n            }\n\n            if (!reached && (_room.roomId === room.roomId)) {\n                reached = true;\n\n                if (selected) {\n                    deSelectRoom(_room.roomId);\n                }\n            }\n        });\n    }\n\n    render() {\n        const { rooms, selectedRoomIds = [], selectOccupant } = this.props;\n\n        return (<BookingContainer>{\n            rooms.map((room) => {\n                return <Room {...room}\n                    selectOccupant={selectOccupant}\n                    selected={selectedRoomIds.includes(room.roomId)}\n                    onSelectionChange={this.onSelectionChange.bind(this, room)} />\n            })\n        }</BookingContainer>);\n    }\n}"]},"metadata":{},"sourceType":"module"}