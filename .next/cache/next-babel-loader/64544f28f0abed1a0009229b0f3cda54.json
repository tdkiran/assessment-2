{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { actionTypes } from './actions-creators';\nimport { createSelector } from 'reselect';\nimport { defaultRoomInfo } from '../app_config';\n\nfunction activeRooms(state = 1, action) {\n  switch (action.type) {\n    case actionTypes.SELECT_ROOM:\n      {\n        return action.roomId + 1;\n      }\n\n    case actionTypes.DESELECT_ROOM:\n      return action.roomId;\n\n    default:\n      return state;\n  }\n}\n\nfunction occupantSelectionInfo(state = [{\n  adult: 1,\n  children: 0,\n  roomId: 0\n}], action) {\n  switch (action.type) {\n    case actionTypes.SELECT_OCCUPANT:\n      {\n        return state.filter(occupantInfo => occupantInfo.id !== action.roomId).concat(action.occupantInfo);\n      }\n\n    case actionTypes.SELECT_ROOM:\n      {\n        const activeRooms = action.roomId + 1;\n        return state.filter(occupantInfo => occupantInfo.id <= activeRooms);\n      }\n\n    case actionTypes.DESELECT_ROOM:\n      {\n        const activeRooms = action.roomId + 1;\n        return state.filter(occupantInfo => occupantInfo.id > activeRooms);\n      }\n\n    default:\n      return state;\n  }\n} // Root Reducer\n\n\nconst reducer = combineReducers({\n  activeRooms,\n  occupantSelectionInfo\n});\nexport default reducer; // selector\n\nexport const getActiveRooms = state => state.activeRooms;\nexport const getOccupantSelectionInfo = state => state.occupantSelectionInfo;\nexport const roomInfo = createSelector(getActiveRooms, getOccupantSelectionInfo, (activeRooms, occupantSelectionInfo) => {\n  const defaultRoom = {\n    adult: 1,\n    children: 0\n  };\n  const currentRoomInfo = defaultRoomInfo.map(roomInfo => {\n    const roomId = roomInfo.roomId;\n    const occupantInfo = occupantSelectionInfo.find(occInfo => occInfo.roomId === roomId);\n    return occupantInfo ? _objectSpread({}, roomInfo, {\n      occupantInfo,\n      active: true,\n      hideOption: roomId === 0 ? true : false\n    }) : _objectSpread({}, roomInfo, {\n      defaultRoom,\n      active: activeRooms <= roomId + 1,\n      hideOption: roomId === 0 ? true : false\n    });\n  });\n  return currentRoomInfo;\n});","map":{"version":3,"sources":["/Users/tdkiran/Desktop/assessment-2/reducers/index.js"],"names":["combineReducers","actionTypes","createSelector","defaultRoomInfo","activeRooms","state","action","type","SELECT_ROOM","roomId","DESELECT_ROOM","occupantSelectionInfo","adult","children","SELECT_OCCUPANT","filter","occupantInfo","id","concat","reducer","getActiveRooms","getOccupantSelectionInfo","roomInfo","defaultRoom","currentRoomInfo","map","find","occInfo","active","hideOption"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { actionTypes } from './actions-creators';\nimport { createSelector } from 'reselect';\nimport { defaultRoomInfo } from '../app_config';\n\nfunction activeRooms(state = 1, action) {\n    switch (action.type) {\n        case actionTypes.SELECT_ROOM: {\n            return action.roomId + 1;\n        }\n        case actionTypes.DESELECT_ROOM:\n            return action.roomId;\n        default:\n            return state\n    }\n}\n\nfunction occupantSelectionInfo(state = [{ adult: 1, children: 0, roomId: 0 }], action) {\n    switch (action.type) {\n        case actionTypes.SELECT_OCCUPANT: {\n            return state\n                .filter(occupantInfo => occupantInfo.id !== action.roomId)\n                .concat(action.occupantInfo);\n        }\n\n        case actionTypes.SELECT_ROOM: {\n            const activeRooms = action.roomId + 1;\n            return state.filter(occupantInfo => occupantInfo.id <= activeRooms);\n        }\n\n        case actionTypes.DESELECT_ROOM: {\n            const activeRooms = action.roomId + 1;\n            return state.filter(occupantInfo => occupantInfo.id > activeRooms);\n        }\n\n        default:\n            return state\n    }\n}\n// Root Reducer\nconst reducer = combineReducers({\n    activeRooms,\n    occupantSelectionInfo\n});\nexport default reducer;\n\n// selector\nexport const getActiveRooms = state => state.activeRooms;\nexport const getOccupantSelectionInfo = state => state.occupantSelectionInfo;\n\nexport const roomInfo = createSelector(getActiveRooms, getOccupantSelectionInfo, (activeRooms, occupantSelectionInfo) => {\n    const defaultRoom = { adult: 1, children: 0 };\n    const currentRoomInfo = defaultRoomInfo.map(roomInfo => {\n        const roomId = roomInfo.roomId;\n        const occupantInfo = occupantSelectionInfo.find(occInfo => occInfo.roomId === roomId);\n        return occupantInfo ? { ...roomInfo, occupantInfo, active: true, hideOption: (roomId === 0 ? true : false) } : { ...roomInfo, defaultRoom, active: (activeRooms <= roomId + 1), hideOption: (roomId === 0 ? true : false) };\n    });\n    return currentRoomInfo;\n});"]},"metadata":{},"sourceType":"module"}