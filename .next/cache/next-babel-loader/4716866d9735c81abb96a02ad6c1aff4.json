{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tdkiran/Desktop/assessment-2/components/booking/booking.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\ndisplay: flex;\\nflex-direction: column;\\nalign-items: start\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Room } from './room';\nimport styled from 'styled-components';\nvar BookingContainer = styled.div(_templateObject());\nvar RoomsContainer = styled.div(_templateObject2());\nexport var Booking =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Booking, _Component);\n\n  function Booking(props) {\n    var _this;\n\n    _classCallCheck(this, Booking);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Booking).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"saveBooking\", function () {\n      var appState = _this.props.appState;\n      localStorage.setItem('bookings', _JSON$stringify(appState));\n    });\n\n    return _this;\n  }\n\n  _createClass(Booking, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var initState = this.props.initState;\n      var localState = JSON.parse(localStorage.getItem('bookings')) || null;\n\n      if (localState) {\n        initState(localState);\n      }\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(room, selected) {\n      var _this$props = this.props,\n          _rooms = _this$props.rooms,\n          selectRoom = _this$props.selectRoom,\n          deSelectRoom = _this$props.deSelectRoom,\n          resetSelection = _this$props.resetSelection;\n\n      var rooms = _rooms.filter(function (r) {\n        return r.available;\n      });\n\n      var index = rooms.indexOf(room);\n      rooms.slice(0, index + 1).forEach(function (_ref) {\n        var roomId = _ref.roomId;\n        return selectRoom(roomId);\n      });\n      rooms.slice(index + 1).forEach(function (_ref2) {\n        var roomId = _ref2.roomId;\n        return deSelectRoom(roomId);\n      });\n\n      if (!selected) {\n        deSelectRoom(room.roomId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var bookingInfo = this.props.bookingInfo;\n      return __jsx(React.Fragment, null, \" \", bookingInfo.map(function (room) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \" Kiran \");\n      })); // return (<BookingContainer>\n      //     <RoomsContainer>\n      //         {\n      //             rooms.map((room) => {\n      //                 return <Room {...room}\n      //                     key={room.roomId}\n      //                     selectOccupant={selectOccupant}\n      //                     selected={selectedRoomIds.includes(room.roomId)}\n      //                     onSelectionChange={this.onSelectionChange.bind(this, room)} />\n      //             })\n      //         }\n      //     </RoomsContainer>\n      //     <button type=\"submit\" data-testid=\"submit\" onClick={this.saveBooking}>Submit</button>\n      // </BookingContainer>);\n    }\n  }]);\n\n  return Booking;\n}(Component);","map":{"version":3,"sources":["/Users/tdkiran/Desktop/assessment-2/components/booking/booking.js"],"names":["React","Component","Room","styled","BookingContainer","div","RoomsContainer","Booking","props","appState","localStorage","setItem","initState","localState","JSON","parse","getItem","room","selected","_rooms","rooms","selectRoom","deSelectRoom","resetSelection","filter","r","available","index","indexOf","slice","forEach","roomId","bookingInfo","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAV,mBAAtB;AAMA,IAAMC,cAAc,GAAGH,MAAM,CAACE,GAAV,oBAApB;AAIA,WAAaE,OAAb;AAAA;AAAA;AAAA;;AACI,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;;AADe,kEAaL,YAAM;AAAA,UACRC,QADQ,GACK,MAAKD,KADV,CACRC,QADQ;AAEhBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,gBAAeF,QAAf,CAAjC;AACH,KAhBkB;;AAAA;AAElB;;AAHL;AAAA;AAAA,wCAKwB;AAAA,UACRG,SADQ,GACM,KAAKJ,KADX,CACRI,SADQ;AAEhB,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAX,KAAgD,IAAnE;;AAEA,UAAIH,UAAJ,EAAgB;AACZD,QAAAA,SAAS,CAACC,UAAD,CAAT;AACH;AACJ;AAZL;AAAA;AAAA,sCAmBsBI,IAnBtB,EAmB4BC,QAnB5B,EAmBsC;AAAA,wBACsC,KAAKV,KAD3C;AAAA,UACfW,MADe,eACtBC,KADsB;AAAA,UACPC,UADO,eACPA,UADO;AAAA,UACKC,YADL,eACKA,YADL;AAAA,UACmBC,cADnB,eACmBA,cADnB;;AAE9B,UAAMH,KAAK,GAAGD,MAAM,CAACK,MAAP,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,SAAN;AAAA,OAAf,CAAd;;AACA,UAAMC,KAAK,GAAGP,KAAK,CAACQ,OAAN,CAAcX,IAAd,CAAd;AAEAG,MAAAA,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeF,KAAK,GAAG,CAAvB,EAA0BG,OAA1B,CAAkC;AAAA,YAAGC,MAAH,QAAGA,MAAH;AAAA,eAAgBV,UAAU,CAACU,MAAD,CAA1B;AAAA,OAAlC;AAEAX,MAAAA,KAAK,CAACS,KAAN,CAAYF,KAAK,GAAG,CAApB,EAAuBG,OAAvB,CAA+B;AAAA,YAAGC,MAAH,SAAGA,MAAH;AAAA,eAAgBT,YAAY,CAACS,MAAD,CAA5B;AAAA,OAA/B;;AAEA,UAAI,CAACb,QAAL,EAAe;AACXI,QAAAA,YAAY,CAACL,IAAI,CAACc,MAAN,CAAZ;AACH;AACJ;AA/BL;AAAA;AAAA,6BAiCa;AAAA,UACGC,WADH,GACmB,KAAKxB,KADxB,CACGwB,WADH;AAEL,aAAO,iCAAIA,WAAW,CAACC,GAAZ,CAAgB,UAAAhB,IAAI;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ;AAAA,OAApB,CAAJ,CAAP,CAFK,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAlDL;;AAAA;AAAA,EAA6BhB,SAA7B","sourcesContent":["import React, { Component } from 'react';\nimport { Room } from './room';\nimport styled from 'styled-components';\n\nconst BookingContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: start\n`;\n\nconst RoomsContainer = styled.div`\n    display: flex;\n`;\n\nexport class Booking extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const { initState } = this.props;\n        const localState = JSON.parse(localStorage.getItem('bookings')) || null;\n\n        if (localState) {\n            initState(localState);\n        }\n    }\n\n    saveBooking = () => {\n        const { appState } = this.props;\n        localStorage.setItem('bookings', JSON.stringify(appState));\n    }\n\n    onSelectionChange(room, selected) {\n        const { rooms: _rooms, selectRoom, deSelectRoom, resetSelection } = this.props;\n        const rooms = _rooms.filter(r => r.available);\n        const index = rooms.indexOf(room);\n\n        rooms.slice(0, index + 1).forEach(({ roomId }) => selectRoom(roomId));\n\n        rooms.slice(index + 1).forEach(({ roomId }) => deSelectRoom(roomId));\n\n        if (!selected) {\n            deSelectRoom(room.roomId);\n        }\n    }\n\n    render() {\n        const { bookingInfo } = this.props;\n        return <> {bookingInfo.map(room => <div> Kiran </div>)}</>\n        // return (<BookingContainer>\n        //     <RoomsContainer>\n        //         {\n        //             rooms.map((room) => {\n        //                 return <Room {...room}\n        //                     key={room.roomId}\n        //                     selectOccupant={selectOccupant}\n        //                     selected={selectedRoomIds.includes(room.roomId)}\n        //                     onSelectionChange={this.onSelectionChange.bind(this, room)} />\n        //             })\n        //         }\n        //     </RoomsContainer>\n        //     <button type=\"submit\" data-testid=\"submit\" onClick={this.saveBooking}>Submit</button>\n        // </BookingContainer>);\n    }\n}"]},"metadata":{},"sourceType":"module"}